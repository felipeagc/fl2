Decisions to make
- Attribute syntax => #(hello, align = 4)
- Syntax for marking variable as uninitialized
- Private symbols => #(private)
- Syntax for slices => [_]i32
- Directives
	- Build settings => #link("libsomething.a")
	- Static if => #if @option.linux {...}
	- Static assert => #assert(...)

TODO:
	- debug information
	- var decl & assign cannot accept non-runtime expressions
	- force return statements when required

Scanner

Parser
- Unary exprs
	cast
	slice (asd[123..123])
	index (a[12])
	array type ([]Something)

- Binary exprs
	addition / subtraction
	multiplication / division
	modulo
	logic && and ||

- Statements
	if / else
	for
	break
	continue
	defer

Analyzer
	type hashing for fast type checking
	force return statements

Codegen


Ideas
	- Treat const decls with block exprs as namespaces
		Namespace :: {
			some_proc :: proc () { }
		}
		Namespace.some_proc();
